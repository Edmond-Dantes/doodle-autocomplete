// src/shapes/CatShape.tsx
import {
  BaseBoxShapeUtil,
  HTMLContainer,
  T,
  type TLBaseShape,
  type RecordProps,
  useDefaultColorTheme,
  // built-in style props / types
  DefaultColorStyle, type TLDefaultColorStyle,
  DefaultFillStyle,  type TLDefaultFillStyle,
  DefaultDashStyle,  type TLDefaultDashStyle,
  DefaultSizeStyle,  type TLDefaultSizeStyle,
  DefaultFontStyle,  type TLDefaultFontStyle,
  DefaultTextAlignStyle, type TLDefaultTextAlignStyle,
  STROKE_SIZES, FONT_SIZES,
} from 'tldraw'


export type CatShape = TLBaseShape<'cat', {
  w: number
  h: number
  text: string
  isDraft: boolean
  color: TLDefaultColorStyle
  fill: TLDefaultFillStyle
  dash: TLDefaultDashStyle
  size: TLDefaultSizeStyle
  font: TLDefaultFontStyle
  textAlign: TLDefaultTextAlignStyle
}>

export class CatShapeUtil extends BaseBoxShapeUtil<CatShape> {
  static override type = 'cat' as const

  // Declare style props → tldraw shows the matching style controls
  static override props: RecordProps<CatShape> = {
    w: T.number,
    h: T.number,
    text: T.string,
    isDraft: T.boolean,
    color: DefaultColorStyle,
    fill: DefaultFillStyle,
    dash: DefaultDashStyle,
    size: DefaultSizeStyle,
    font: DefaultFontStyle,
    textAlign: DefaultTextAlignStyle,
  }

  getDefaultProps(): CatShape['props'] {
    return {
      w: 100,
      h: 100,
      text: '',
      isDraft: false,
      color: 'light-red',
      fill: 'none',     // head fill (we’ll map this)
      dash: 'solid',
      size: 'm',        // drives stroke width
      font: 'sans',
      textAlign: 'middle',
    }
  }

component(shape: CatShape) {
  const { w, h, color, fill, dash, size, isDraft } = shape.props
  const theme = useDefaultColorTheme()

  const stroke = theme[color].solid
  const sw = STROKE_SIZES[size]
  const dashArray =
    dash === 'dotted' ? `${sw} ${sw}` :
    dash === 'dashed' ? `${sw * 2} ${sw * 2}` :
    undefined

  // proportions
  const cx = w / 2
  const headR      = Math.min(w, h) * 0.14
  const headCY     = headR + sw + h * 0.02
  const neckY      = headCY + headR
  const shouldersY = neckY + h * 0.06
  const hipsY      = h * 0.68
  const feetY      = h * 0.95
  const leftArmX   = w * 0.18
  const rightArmX  = w * 0.82
  const leftLegX   = w * 0.36
  const rightLegX  = w * 0.64

  const headFill =
    fill === 'semi'  ? theme[color].semi :
    fill === 'solid' ? theme[color].solid :
    'none'

  return (
    <HTMLContainer style={{ width: w, height: h, opacity: isDraft ? 0.6 : 1 }}>
<svg width={w} height={h} viewBox="0 0 100 100" style={{ display: 'block' }}>
    <g fill={stroke} stroke="none">
   <path d="M31.29,32.14c-0.93,0.25-1.8,0.47-2.66,0.73c-1.01,0.3-2.01,0.62-3,0.95c-0.43,0.15-0.75,0.04-0.93-0.35
		c-0.2-0.43-0.1-0.84,0.38-1.02c1.14-0.42,2.29-0.82,3.45-1.18c0.77-0.24,1.57-0.34,2.33-0.58c0.25-0.08,0.52-0.4,0.6-0.66
		c0.33-1.18,0.4-2.48,0.93-3.56c0.73-1.49,0.78-2.98,0.77-4.55c-0.03-3.42-0.01-6.85,0-10.27c0-1.09,0.13-2.14,0.81-3.05
		c1.14-1.53,2.85-1.79,4.41-0.68c1.96,1.41,3.97,2.75,5.84,4.27c1.06,0.86,2.05,1.01,3.33,0.71c3.85-0.88,7.74-0.78,11.63-0.18
		c0.45,0.07,0.92,0.11,1.33,0.28c0.85,0.35,1.46,0.03,2.14-0.48c2.17-1.64,4.38-3.23,6.6-4.81c1.51-1.08,3.71-0.31,4.47,1.59
		c0.28,0.71,0.43,1.52,0.43,2.28c0.02,4.21-0.03,8.41-0.02,12.62c0,0.39,0.1,0.82,0.27,1.18c0.68,1.45,1.17,2.95,1.35,4.53
		c0.04,0.39,0.2,0.56,0.58,0.66c1.84,0.52,3.67,1.07,5.51,1.62c0.16,0.05,0.3,0.13,0.45,0.2c0.39,0.21,0.49,0.54,0.35,0.94
		c-0.14,0.4-0.47,0.53-0.85,0.42c-0.69-0.19-1.38-0.42-2.07-0.62c-1.03-0.3-2.05-0.61-3.09-0.88c-0.68-0.18-0.8-0.07-0.85,0.62
		c-0.1,1.44-0.09,1.4,1.37,1.83c1.12,0.33,2.21,0.77,3.31,1.19c0.41,0.16,0.8,0.41,0.58,0.98c-0.21,0.53-0.61,0.67-1.23,0.45
		c-1.2-0.43-2.4-0.88-3.6-1.3c-0.82-0.29-0.92-0.25-1.18,0.43c-0.92,2.35-2.33,4.36-4.18,6.05c-0.42,0.38-0.44,0.7-0.24,1.17
		c0.58,1.38,1.21,2.76,1.68,4.18c0.56,1.71,1.02,3.47,1.46,5.22c0.95,3.83,1.26,7.73,0.95,11.65c-0.19,2.46-0.59,4.9-1.06,7.33
		c-0.67,3.48-1.83,6.83-3.05,10.16c-0.16,0.43-0.04,0.6,0.41,0.66c1.89,0.23,3.74-0.04,5.59-0.43c0.38-0.08,0.41-0.3,0.27-0.65
		c-1.34-3.33,0.35-6.63,3.47-7.62c2.12-0.68,4.07-0.15,5.81,1.19c2.58,1.99,3.62,5.5,2.62,8.74c-1.28,4.15-4.22,6.61-8.18,8.03
		c-0.33,0.12-0.68,0.18-1,0.3c-0.15,0.06-0.34,0.18-0.39,0.32c-0.39,1.05-0.46,1.11-1.6,1.11c-4.38,0-8.75,0.01-13.13,0.03
		c-0.29,0-0.62,0.08-0.87,0.23c-2.37,1.37-4.72,1.43-7.06-0.05c-0.18-0.11-0.42-0.18-0.64-0.18c-0.93-0.02-1.86-0.03-2.79-0.01
		c-0.23,0.01-0.48,0.12-0.68,0.25c-1.12,0.68-2.32,1.02-3.64,1c-1.09-0.02-2.04-0.39-3.01-0.84c-0.45-0.21-0.96-0.4-1.44-0.4
		c-7.54-0.03-15.07-0.05-22.61,0.01c-1.42,0.01-2.2-0.53-2.77-1.76c-1.36-2.92-2.49-5.93-3.11-9.09c-0.6-3.05-0.91-6.14-0.64-9.28
		c0.27-3.14,0.81-6.2,1.82-9.18c0.78-2.3,1.76-4.51,2.93-6.65c3.52-6.43,8.37-11.82,13.19-17.24c0.11-0.12,0.21-0.26,0.33-0.36
		c0.52-0.43,0.45-0.84,0.1-1.39c-0.53-0.83-0.96-1.72-1.38-2.62c-0.16-0.34-0.31-0.43-0.65-0.32c-1.25,0.43-2.49,0.84-3.74,1.27
		c-0.12,0.04-0.23,0.09-0.35,0.12c-0.46,0.11-0.88,0.09-1.07-0.44c-0.19-0.53,0.11-0.83,0.55-1c0.9-0.35,1.81-0.69,2.72-1.01
		c0.52-0.18,1.07-0.29,1.59-0.49c0.16-0.06,0.35-0.31,0.34-0.46C31.52,33.42,31.4,32.83,31.29,32.14z M23.64,90.15
		c-0.48-1.08-0.97-2.02-1.32-2.99c-0.45-1.25-0.86-2.53-1.17-3.82c-0.22-0.92,0.69-1.68,1.45-1.26c0.33,0.18,0.62,0.62,0.74,1
		c0.73,2.29,1.68,4.47,2.85,6.56c0.2,0.36,0.45,0.53,0.88,0.53c4.58-0.01,9.17,0,13.75,0c0.17,0,0.34-0.04,0.58-0.08
		c-0.14-0.23-0.23-0.37-0.31-0.51c-0.92-1.54-1.91-3.04-2.76-4.61c-2.19-4.04-3.95-8.28-5.38-12.65c-0.35-1.05-0.67-2.13-0.84-3.22
		c-0.15-0.96,0.63-1.69,1.61-1.71c0.91-0.02,1.45,0.48,1.84,1.53c1.23,3.34,2.4,6.7,3.76,9.99c1.47,3.57,3.31,6.96,5.65,10.05
		c0.65,0.87,1.53,1.63,2.44,2.23c0.92,0.61,2,0.58,2.99-0.04c0.97-0.61,1.21-1.49,1.03-2.57c-0.2-1.2-0.34-2.4-0.52-3.61
		c-0.38-2.53-0.77-5.05-1.13-7.58c-0.24-1.65-0.48-3.3-0.67-4.96c-0.12-0.97,0.48-1.74,1.38-1.89c0.95-0.16,1.78,0.33,1.98,1.32
		c0.27,1.33,0.47,2.67,0.67,4.02c0.37,2.46,0.72,4.93,1.09,7.4c0.02,0.15,0.11,0.3,0.2,0.54c0.1-0.17,0.15-0.22,0.15-0.27
		c0.35-2.4,0.7-4.81,1.05-7.21c0.22-1.51,0.43-3.02,0.72-4.51c0.19-0.98,1.14-1.46,2.16-1.21c0.81,0.19,1.36,1.16,1.21,2.03
		c-0.23,1.36-0.42,2.73-0.62,4.09c-0.3,2.04-0.6,4.07-0.89,6.11c-0.29,2.02-0.62,4.03-0.85,6.05c-0.19,1.71,1.5,3.06,3.19,2.66
		c1.35-0.32,2.3-1.13,2.89-2.32c1.29-2.62,2.66-5.22,3.7-7.94c1.14-2.99,2.06-6.08,2.86-9.18c0.57-2.22,0.91-4.52,1.11-6.81
		c0.19-2.15,0.22-4.33,0.03-6.48c-0.19-2.14-0.62-4.27-1.14-6.36c-0.49-1.95-1.23-3.83-1.87-5.74c-0.18-0.53-0.42-1.05-0.64-1.56
		c-0.96,0.44-1.84,0.85-2.72,1.24c-2.68,1.19-5.5,1.92-8.41,2.13c-3.41,0.24-6.78,0.04-10.11-0.9c-3.51-0.99-6.67-2.58-9.44-4.95
		c-0.35-0.3-0.57-0.27-0.86,0.06c-1.96,2.26-4,4.45-5.89,6.76c-1.83,2.25-3.59,4.57-5.23,6.96c-1.67,2.45-3.02,5.1-4.08,7.89
		c-1.09,2.85-1.76,5.79-2,8.82c-0.32,4.02,0.03,7.99,1.25,11.85c0.49,1.57,1.14,3.09,1.75,4.61c0.08,0.21,0.33,0.45,0.54,0.49
		C22.68,90.21,23.12,90.15,23.64,90.15z M35.41,34.95c0.13,0.35,0.19,0.53,0.27,0.69c0.82,1.77,1.99,3.28,3.46,4.54
		c3.65,3.12,7.96,4.73,12.69,5.11c4.39,0.35,8.64-0.36,12.59-2.41c3.15-1.64,5.76-3.83,7.18-7.21c0.28-0.66,0.18-0.85-0.54-0.92
		c-1.07-0.11-2.13-0.2-3.2-0.29c-0.61-0.05-1.05-0.4-1.04-0.84c0.01-0.47,0.43-0.76,1.1-0.73c0.08,0,0.16,0.02,0.25,0.03
		c1.21,0.14,2.42,0.29,3.63,0.4c0.16,0.01,0.47-0.18,0.5-0.33c0.3-1.45,0.38-1.51-1.16-1.73c-0.06-0.01-0.12-0.01-0.19-0.01
		c-1.05-0.09-2.1-0.17-3.14-0.28c-0.49-0.05-0.91-0.26-0.86-0.85c0.05-0.57,0.48-0.72,0.98-0.72c0.14,0,0.29,0.03,0.43,0.04
		c1.11,0.11,2.22,0.22,3.32,0.33c0.39,0.04,0.66-0.06,0.48-0.5c-0.51-1.25-0.96-2.54-1.62-3.72c-0.61-1.09-1.46-2.04-2.19-3.06
		c-0.45-0.62-0.46-1.2-0.05-1.63c0.45-0.48,1.2-0.55,1.82-0.16c0.16,0.1,0.32,0.2,0.61,0.38c0-0.33,0-0.5,0-0.68
		c-0.01-2.7-0.01-5.4-0.02-8.1c0-0.36-0.07-0.72-0.11-1.07c-0.33,0.17-0.69,0.31-0.99,0.53c-2.14,1.51-4.27,3.04-6.4,4.56
		c-0.52,0.37-1.04,0.54-1.73,0.37c-1.5-0.35-3.02-0.64-4.55-0.84c-3.5-0.46-6.95-0.21-10.36,0.72c-0.69,0.19-1.38,0.52-2.12-0.02
		c-2.26-1.66-4.55-3.28-6.83-4.91c-0.23-0.16-0.49-0.28-0.73-0.41c-0.07,0.28-0.2,0.57-0.2,0.85c-0.02,2.62-0.02,5.24-0.02,7.86
		c0,0.33,0,0.67,0,1.07c0.29-0.17,0.48-0.29,0.68-0.38c0.61-0.3,1.17-0.21,1.58,0.25c0.44,0.49,0.44,0.92-0.02,1.56
		c-0.71,0.99-1.54,1.91-2.13,2.96c-0.67,1.19-1.19,2.48-1.66,3.76c-0.26,0.69-0.14,0.74,0.58,0.67c1.29-0.11,2.59-0.22,3.88-0.32
		c0.43-0.03,0.89-0.13,1.29-0.03c0.27,0.07,0.56,0.39,0.66,0.66c0.14,0.4-0.18,0.64-0.56,0.74c-0.22,0.06-0.45,0.07-0.67,0.09
		c-1.44,0.13-2.88,0.21-4.31,0.41c-1.25,0.17-1.23,0.23-1.12,1.46c0.04,0.51,0.24,0.66,0.76,0.59c1.66-0.21,3.32-0.38,4.98-0.56
		c0.16-0.02,0.38-0.02,0.48,0.07c0.21,0.21,0.49,0.47,0.51,0.72c0.01,0.21-0.28,0.54-0.5,0.62c-0.4,0.14-0.85,0.13-1.28,0.18
		C38.35,34.61,36.94,34.77,35.41,34.95z M67.07,90.05c0.2,0.04,0.32,0.07,0.43,0.07c1.65,0.01,3.3,0.07,4.95,0
		c2.75-0.12,5.46-0.51,7.97-1.72c2.5-1.21,4.41-2.93,5.09-5.76c0.45-1.88-0.55-4.14-2.26-4.98c-1.23-0.6-2.57-0.22-3.15,0.9
		c-0.31,0.59-0.22,1.18,0,1.79c0.19,0.53,0.63,0.36,0.98,0.43c0.91,0.2,1.4,1.26,0.81,1.96c-0.62,0.73-1.33,1.43-2.13,1.93
		c-2.03,1.26-4.33,1.67-6.68,1.74c-1.15,0.04-2.3-0.11-3.46-0.13c-0.26-0.01-0.66,0.06-0.76,0.23
		C68.25,87.65,67.69,88.81,67.07,90.05z"/>
	<path d="M54.54,29.5c0.82,0.04,1.65,0.04,2.47,0.12c0.93,0.1,1.22,0.62,0.94,1.52c-0.29,0.92-0.91,1.55-1.68,2.06
		c-0.69,0.46-0.82,0.79-0.53,1.58c0.47,1.26,1.42,1.92,2.72,2.14c0.2,0.03,0.42,0.02,0.61,0.07c0.46,0.11,0.8,0.36,0.78,0.88
		c-0.02,0.54-0.4,0.75-0.86,0.79c-1.57,0.14-2.88-0.41-3.88-1.62c-0.33-0.41-0.52-0.47-0.88-0.03c-1.08,1.32-2.56,1.72-4.2,1.69
		c-0.59-0.01-1.08-0.46-1.07-0.91c0.01-0.45,0.46-0.74,1.05-0.85c0.76-0.14,1.53-0.29,2.24-0.6c0.73-0.31,1.14-0.99,1.33-1.77
		c0.13-0.53,0.12-0.96-0.5-1.27c-0.86-0.42-1.43-1.17-1.78-2.06c-0.4-0.99,0.01-1.6,1.07-1.69c0.04,0,0.08,0,0.12,0
		c0.68,0,1.36,0,2.04,0C54.54,29.53,54.54,29.52,54.54,29.5z"/>
	<path d="M63.53,29.54c-1.07,0.01-1.91-0.82-1.91-1.86c0-1.03,0.86-1.89,1.89-1.9c1.11-0.01,2.01,0.84,2.03,1.9
		C65.55,28.64,64.58,29.53,63.53,29.54z"/>
	<path d="M46.1,25.77c1.15,0.01,1.91,0.8,1.9,1.97c0,0.99-0.88,1.8-1.96,1.8c-1,0-1.85-0.93-1.83-2.01
		C44.23,26.51,45.03,25.76,46.1,25.77z"/>
</g>
</svg>

    </HTMLContainer>
  )
}


  indicator(shape: CatShape) {
    const { w, h } = shape.props
    const r = Math.min(h / 2, 999)
    return <rect width={w} height={h} rx={r} ry={r} />
  }
}
